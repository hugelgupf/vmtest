version: 2

templates:
  golang-template: &golang-template
    docker:
      - image: cimg/go:1.19
    working_directory: /home/circleci/go/src/github.com/hugelgupf/vmtest

  integration-amd64-template: &integration-amd64-template
    docker:
      - image: uroottest/test-image-amd64:v5.2.0
    working_directory: /home/circleci/go/src/github.com/hugelgupf/vmtest
    environment:
      - UROOT_SOURCE: /home/circleci/go/src/github.com/hugelgupf/vmtest
      - UROOT_QEMU_TIMEOUT_X: 7
      - VMTEST_KERNEL: /home/circleci/bzImage
      - VMTEST_QEMU: "/home/circleci/qemu-system-x86_64 -L /home/circleci/pc-bios -m 1G"
      - VMTEST_GOARCH: amd64

  integration-arm64-template: &integration-arm64-template
    docker:
      - image: uroottest/test-image-arm64:v5.2.0
    working_directory: /home/circleci/go/src/github.com/hugelgupf/vmtest
    environment:
      - UROOT_SOURCE: /home/circleci/go/src/github.com/hugelgupf/vmtest
      - UROOT_QEMU_TIMEOUT_X: 7
      - VMTEST_KERNEL: /home/circleci/Image
      - VMTEST_QEMU: "/home/circleci/qemu-system-aarch64 -machine virt -cpu max -m 1G"
      - VMTEST_GOARCH: arm64

  test-template: &test-template
    steps:
      - checkout
      - run: go test -v -p=1 ./...

workflows:
  version: 2
  test:
    jobs:
      - build
      - test-arm64:
          requires:
            - build
      - test-amd64:
          requires:
            - build

jobs:
  build:
    <<: *golang-template
    steps:
      - checkout
      - run: go env
      - run: go vet ./...
      - run:
          name: go mod tidy
          command: |
            go mod tidy
            go mod verify
            git status
            if [[ -n "$(git status --porcelain .)" ]]; then
              echo 'go.mod/go.sum is out-of-date: run `go mod tidy` in the right module directories (see git status) and then check in the changes'
              echo 'If `go mod tidy` results in no changes, make sure you are using the latest relase of Go'
              git status --porcelain .
              exit 1
            fi
      - run:
          name: gofmt
          command: test -z "$(gofmt -s -l $(find -name '*.go'))"
      - run: go build ./...

  test-amd64:
    <<: [*test-template, *integration-amd64-template]

  test-arm64:
    <<: [*test-template, *integration-arm64-template]
